MODEL:
  META_ARCHITECTURE: "RelationRetinaNet"
  BACKBONE:
    NAME: "build_retinanet_resnet_fpn_backbone"
  #WEIGHTS: "./output/model_0040928.pth"
  #WEIGHTS: "./output/model_final_4cafe0.pkl"
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  #WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-101.pkl"

  RESNETS:
    OUT_FEATURES: ["res3", "res4", "res5"]
    DEPTH: 50
  ANCHOR_GENERATOR:
    NAME: "RotatedAnchorGenerator"
    SIZES: !!python/object/apply:eval ["[[x, x * 2**(1.0/3), x * 2**(2.0/3) ] for x in [32, 64, 128, 256, 512]]"]
    #SIZES: [[64, 128]]
    ASPECT_RATIOS: [[0.25, 1, 2, 4]]
    ANGLES: [[-90, -60, -30, 0]]
  FPN:
    IN_FEATURES: ["res3", "res4", "res5"]
  RETINANET:
    #IN_FEATURES:['p4', 'p5', 'p6', 'p7']
    IOU_THRESHOLDS: [0.3, 0.5]
    IOU_LABELS: [0, -1, 1]
    NUM_CONVS: 4
    NUM_CLASSES: 1
    FOCAL_LOSS_ALPHA: 0.9
    FOCAL_LOSS_GAMMA: 5.0
    BBOX_REG_WEIGHTS: (1, 1, 1, 1, 1)
    NMS_THRESH_TEST: 0.4
DATASETS:
  TRAIN: ("pathway_train_0_rotated_relation",)
  TEST: ("pathway_val_0_rotated_relation",)
SOLVER:
  #LR_SCHEDULER_NAME: "WarmupCosineLR"
  IMS_PER_BATCH: 4
  CHECKPOINT_PERIOD: 3000
  MOMENTUM: 0.9
  BASE_LR: 0.001  # Note that RetinaNet uses a different default learning rate
  STEPS: (80000, 200000)
  MAX_ITER: 300000
INPUT:
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MAX_SIZE_TRAIN: 800
TEST:
  EVAL_PERIOD: 0
